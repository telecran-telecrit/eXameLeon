// Copyright (C) 2019 Caio Lima (Igalia SL). All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
desc: PrivateName of private setter is available on inner classes
info: |
  Updated Productions

  CallExpression[Yield, Await]:
    CoverCallExpressionAndAsyncArrowHead[?Yield, ?Await]
    SuperCall[?Yield, ?Await]
    CallExpression[?Yield, ?Await]Arguments[?Yield, ?Await]
    CallExpression[?Yield, ?Await][Expression[+In, ?Yield, ?Await]]
    CallExpression[?Yield, ?Await].IdentifierName
    CallExpression[?Yield, ?Await]TemplateLiteral[?Yield, ?Await]
    CallExpression[?Yield, ?Await].PrivateName

template: default
features: [class-methods-private, class-fields-public]
---*/

//- elements
set #m(v) { this._v = v; }

B = class {
  method(o, v) {
    o.#m = v;
  }
}
//- assertions
let c = new C();
let innerB = new c.B();
innerB.method(c, 'test262');
assert.sameValue(c._v, 'test262');
